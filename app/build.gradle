apply plugin: 'com.android.application'

// kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// HttpMock
apply from: '../lib_httpmock_no_op/httpmock.gradle'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version
    compileOptions {
        sourceCompatibility rootProject.ext.java_version
        targetCompatibility rootProject.ext.java_version
    }
    defaultConfig {
        applicationId "estyle.teabaike"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            zipAlignEnabled true
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        def estyle = 'estyle'
        debug {
            storeFile file("${estyle}.jks")
            storePassword estyle
            keyAlias = estyle
            keyPassword estyle
        }
        release {
            storeFile file("${estyle}.jks")
            storePassword estyle
            keyAlias = estyle
            keyPassword estyle
        }
    }
    sourceSets {
        main {
            java {
                srcDir 'src/main/kt'
            }
        }
    }
    dataBinding {
        enabled = true
    }
}

// ARouter
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':baselibrary')

    // Test
    testImplementation "junit:junit:${rootProject.ext.junit_version}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.runner_version}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.espresso_core_version}"
    androidTestImplementation "androidx.test:rules:${rootProject.ext.rules_version}"

    // Room
    kapt "androidx.room:room-compiler:${rootProject.ext.room_version}"
    // PermissionsDispatcher
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:${rootProject.ext.permissions_dispatcher_version}"
    // Dagger
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.dagger_version}"
    // ARouter
    kapt "com.alibaba:arouter-compiler:${rootProject.ext.arouter_compiler_version}"
    // HttpMock
    kaptDebug project(path: ':lib_httpmock_processor')
}
