apply plugin: 'com.android.library'

// kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version
    compileOptions {
        sourceCompatibility rootProject.ext.java_version
        targetCompatibility rootProject.ext.java_version
    }
    defaultConfig {
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java {
                srcDir 'src/main/kt'
            }
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "junit:junit:${rootProject.ext.junit_version}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.runner_version}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.espresso_core_version}"
    api "androidx.core:core-ktx:${rootProject.ext.core_version}"
    api "androidx.appcompat:appcompat:${rootProject.ext.appcompat_version}"
    api "androidx.multidex:multidex:${rootProject.ext.multidex_version}"
    api "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintlayout_version}"
    api "com.google.android.material:material:${rootProject.ext.material_version}"

    // Lifecycle
    api "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.lifecycle_version}"
    api "androidx.lifecycle:lifecycle-common-java8:${rootProject.ext.lifecycle_version}"
    api "androidx.lifecycle:lifecycle-reactivestreams-ktx:${rootProject.ext.lifecycle_version}"

    // Paging
    api "androidx.paging:paging-runtime-ktx:${rootProject.ext.paging_version}"
    api "androidx.paging:paging-rxjava2-ktx:${rootProject.ext.paging_version}"

    // Room
    api "androidx.room:room-ktx:${rootProject.ext.room_version}"
    api "androidx.room:room-rxjava2:${rootProject.ext.room_version}"
    kapt "androidx.room:room-compiler:${rootProject.ext.room_version}"

    // Retrofit
    api "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofit_version}"
    api "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofit_version}"

    // Glide
    api "com.github.bumptech.glide:okhttp3-integration:${rootProject.ext.glide_version}"
    kapt "com.github.bumptech.glide:compiler:${rootProject.ext.glide_version}"

    // Dagger
    api "com.google.dagger:dagger-android-support:${rootProject.ext.dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.dagger_version}"

    // PermissionsDispatcher
    api "org.permissionsdispatcher:permissionsdispatcher:${rootProject.ext.permissions_dispatcher_version}"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:${rootProject.ext.permissions_dispatcher_version}"

    // RxAndroid
    api "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxandroid_version}"

    // AutoDispose
    api "com.uber.autodispose:autodispose-android-archcomponents-ktx:${rootProject.ext.autodispose_version}"

    // LeakCanary
    debugApi "com.squareup.leakcanary:leakcanary-android:${rootProject.ext.leak_canary_version}"
    debugApi "com.squareup.leakcanary:leakcanary-support-fragment:${rootProject.ext.leak_canary_version}"
    releaseApi "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.ext.leak_canary_version}"

    // Chuck
    debugApi "com.readystatesoftware.chuck:library:${rootProject.ext.chuck_version}"
    releaseApi "com.readystatesoftware.chuck:library-no-op:${rootProject.ext.chuck_version}"

    // HttpMock
    debugApi project(path: ':lib_httpmock')
    releaseApi project(path: ':lib_httpmock_no_op_ktx')
    kaptDebug project(path: ':lib_httpmock_processor')
}
